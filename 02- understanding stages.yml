# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: FirstJobInBuild
    steps:
    - script: echo "Building code"
    - bash: echo $(Pipeline_level_variable)
    - bash: echo $(Build.Buildnumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(Build.ArtifactStagingDirectory)

    - bash: java -version
    - bash: node --version
    - bash: python --version
    - bash: mvn -version
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

      

  # - job: SecondJobInBuild
  #   steps:
  #   - script: echo "Building code"
  #     displayName: 'Build Step'

# - stage: DevDeploy
#   jobs:
#   - job: DeployToDev
#     steps:
#     - script: echo "Deploying to Dev environment"
#       displayName: 'Dev Deployment Step'

# - stage: QADeploy
#   dependsOn: Build
#   jobs:
#   - job: DeployToQA
#     steps:
#     - script: echo "Deploying to QA environment"
#       displayName: 'QA Deployment Step'

# - stage: ProdDeploy
#   dependsOn:
#   - DevDeploy
#   - QADeploy
#   jobs:
#   - job: DeployToProd
#     steps:
#     - script: echo "Deploying to Production environment"
#       displayName: 'Production Deployment Step'
